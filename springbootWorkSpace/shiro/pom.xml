<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>hua-parent</artifactId>
        <groupId>com.hua.common</groupId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../../hua-parent/pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hua.shiro</groupId>
    <artifactId>shiro</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <!--项目的编译依赖路径-->
        <project.build.complie.dependency.path>src\main\webapp\WEB-INF\lib</project.build.complie.dependency.path>
        <!--项目的打包依赖路径-->
        <project.build.package.dependency.path>target\shiro\WEB-INF\lib</project.build.package.dependency.path>
    </properties>

    <dependencies>

        <!-- servlet 容器
                 https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>

        <!--日志框架
        -->
        <!--slf4j 为抽象的日志框架 主要提供日志接口 其具体的日志实现 可以交给 logging,log4j,logback-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <!--logback 是 log4j的后续版本，核心重写，性能提升将近10倍，作为slf4j 的具体实现的日志框架 -->
        <!--核心-->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <!--logback-classic 实现了SLF4J API ，可以在 logback 和 其他日志记录系统之间切换-->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <!--logback-access 集成了Servlet 容器，可以提供 HTTP访问日志功能。
            https://logback.qos.ch/access.html
            -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId>
        </dependency>
        <!--核心包
        -->
        <!--实现IOC(反向控制) DI(依赖注入)-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <exclusions>
                <!-- 排除 JCL jakarta commons logging-->
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--加上 jcl 与 slf4j 桥接-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.22</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <!--实现国际化，资源加载，EJB，JMX-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <!--实现 缓存，邮件，调度，模板引擎-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <!--实现 SpEL 设置属性，获取属性...-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
        </dependency>
        <!---->

        <!--面向切面，检测-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
        </dependency>
        <!--检测-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-instrument</artifactId>
        </dependency>
        <!--tomcat检测-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-instrument-tomcat</artifactId>
        </dependency>


        <!--消息机制-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
        </dependency>

        <!--数据访问/集成-->
        <!--jdbc连接-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <!--实现事务-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>
        <!--对象数据映射-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>
        <!--对象XML映射-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
        </dependency>
        <!--java message service-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jms</artifactId>
        </dependency>

        <!--网络-->
        <!--提供Web基本功能-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <!--spring mvc  对servlet 进一步封装优化-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>

        <!--测试-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>

        <!-- shiro start-->
        <!--<dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-all</artifactId>
            <version>1.3.2</version>
        </dependency>-->


        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-aspectj</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-cas</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
            <version>1.6.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-guice</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-hazelcast</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-quartz</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-web</artifactId>
            <version>1.3.2</version>
        </dependency>

        <!--<dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-tools-hasher</artifactId>
            <version>1.3.2</version>
        </dependency>-->


        <!-- shiro end -->

        <!-- https://mvnrepository.com/artifact/net.sf.ehcache/ehcache -->
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>2.10.6</version>
        </dependency>

        <!--数据层jar-->
        <!-- mysql的jdbc 依赖 https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.46</version>
        </dependency>
        <!--mybatis 依赖-->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.5.0</version>
        </dependency>
        <!--spring 中 加mybatis
            http://www.mybatis.org/spring/zh/transactions.html#programmatic
        -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>1.3.2</version>
        </dependency>

        <!--
        DBCP是一个依赖 Jakarta commons-pool对象池机制的数据库连接池，
        所以在类路径下还必须包括/lib/jakarta- commons/commons-pool.jar
        -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-dbcp2</artifactId>
            <version>2.5.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
            <version>2.6.0</version>
        </dependency>
    </dependencies>
    <build>
        <!--
            打包后 的包名 为 shiro
            没有的话 默认 artifactId+version
        -->
        <finalName>shiro</finalName>
        <!--项目依赖关系插件
            将 父项目的 继承的 jar copy 到 子项目 目录中 方便 编译，运行，打包
            注：maven 所有的功能都是通过 插件实现的，自身没有自带 任何功能

            http://maven.apache.org/components/plugins/
        -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>complie-copy-dependencies</id>
                        <!--执行阶段 为 编译阶段-->
                        <phase>compile</phase>
                        <goals>
                            <!--执行目标 为 copy-dependencies  复制项目依赖 到指定目录-->
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!-- 输出的依赖目录 -->
                            <outputDirectory>${project.build.complie.dependency.path}</outputDirectory>
                            <overWriteReleases> false </overWriteReleases>
                            <overWriteSnapshots> false </overWriteSnapshots>
                            <overWriteIfNewer> true </overWriteIfNewer>
                        </configuration>
                    </execution>
                    <execution>
                        <id>package-copy-dependencies</id>
                        <!--执行阶段 为 编译阶段-->
                        <phase>package</phase>
                        <goals>
                            <!--执行目标 为 copy-dependencies   复制项目依赖 到指定目录-->
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!-- 输出的依赖目录 -->
                            <outputDirectory>${project.build.package.dependency.path}</outputDirectory>
                            <overWriteReleases> false </overWriteReleases>
                            <overWriteSnapshots> false </overWriteSnapshots>
                            <overWriteIfNewer> true </overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--清除 src/main/webapp/WEB-INF/lib 中的 jar-->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/webapp/WEB-INF/lib</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>